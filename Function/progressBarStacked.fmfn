// PROGRESS BAR STACKED

// Creates a horizontal progress bar composed of multiple coloured segments, 
// defined by a JSON input with individual percentage values.

// NOTE : The segments are stacked, so make sure to order the array starting with the lowest percentages 

// Function Name : progressBarStacked
// Parameters : width ; height ; radius ; backgroundColor ; segmentArray
// Use example : progressBarStacked ( 500 ; 16 ; 5 ; "#f4f4f4" ; $jsonArray )

Let ( [

		~width = Round ( width * ( 100 / Get ( WindowZoomLevel ) ) ; 0 ) ;
		~height = Round ( height * ( 100 / Get ( WindowZoomLevel ) ) ; 0 ) ;
		~radius = radius ;
		~backgroundColor = backgroundColor ;
		~scaleFix = 1 ; // Round( 100 / Get ( WindowZoomLevel ) ; 0 ) ;
		~segments = 

			While ( [ 

					~segmentArray = segmentArray  ;
			
					~count = ValueCount ( JSONListKeys ( ~segmentArray ; "stack" ) ) ;
					~x = 0 ;
					~result = "" ; 
					~i = 0
					
				] ; 
			
					~i < ~count
			
				; [ 
					
					~dx = ~width * JSONGetElement ( ~segmentArray ; "stack[" & ~i & "]percent" ) / 100 ;
					~fill = JSONGetElement ( ~segmentArray ; "stack[" & ~i & "]color" ) ;
					~result = List ( ~result ; "<rect x='" & ~x & "' y='0' width='" & ~dx & "' height='" & 100 & "' fill='" & ~fill &  "' />" ) ;
					~x = ~x + ~dx ;
					~i = ~i + 1
			
				] ; 
			
					~result 
			
			) ;

		~svg = 

			"<?xml version='1.0' encoding='UTF-8'?>" & 

			If ( Get(Device) > 2 ; 
	
				"<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"width:100%;height:100%; \"viewBox=\"0 0 " & ~width & " " & ~height & "\" preserveAspectRatio=\"xMidYMid meet\">"  ;
				"<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 " & ~width & " " & ~height & "'>" 
	
			) &

				"<clipPath id='barMask'>" &
					"<rect x='0' y='0' width='" & ~width & "' height='" & ~height & "' rx='" & ~radius & "' ry='" & ~radius & "' />" &
				"</clipPath>" &
				"<rect x='0' y='0' width='" & ~width & "' height='" & ~height & "' fill='" & ~backgroundColor & "' />" &
				"<g clip-path='url(#barMask)'>" & ~segments & "</g>" &

			"</svg>" 

		] ;

			Case ( 
				PatternCount ( Get ( ApplicationVersion ) ; "Web" ) ;
				"data:image/svg+xml;base64," & Base64Encode ( Substitute ( ~svg ; "¶" ; "" ) ) ;

			Get( Device ) > 2 ;

						"data:text/html," & 

				"<html>
				<meta name=\"viewport\" content=\"width=device-width, initial-scale=" & ~scaleFix & ", maximum-scale=" & ~scaleFix & ", user-scalable=no\">
				  <body style=\"margin:0;padding:0;background:#" & ~backgroundColor & ";\">"
				     & ~svg &
				  "</body>
				</html>" ;

				"data:image/svg+xml;utf8," & Substitute ( ~svg ; "¶" ; "" )
			)

)

// This function renders a horizontal, stacked-style SVG progress bar where each segment
// represents a distinct stage or category of progress. The segments are defined via a 
// JSON object that specifies a colour and percentage for each part. The function calculates 
// the relative widths and assembles each segment in sequence. A background colour fills the 
// bar behind the segments, and rounded corners are applied through SVG clipping. 

// JSON ARRAY EXAMPLE

// JSONSetElement ( "" ; 

//	[ "stack[+]color" ; "#211732" ; 1 ] ; 
//	[ "stack[:]percent" ; 10 ; 2 ] ; 
//	[ "stack[+]color" ; "#ad9fcd" ; 1 ] ; 
//	[ "stack[:]percent" ; 20 ; 2 ] ; 
//	[ "stack[+]color" ; "#7962a8" ; 1 ] ; 
//	[ "stack[:]percent" ; 40 ; 2 ] ; 
//	[ "stack[+]color" ; "#e8deee" ; 1 ] ; 
//	[ "stack[:]percent" ; 70 ; 2 ] 

//)

// The result is Base64-encoded and suitable for use in container fields or web viewers within FileMaker solutions.

// GitHub : https://github.com/roxytheman/fmCustomFunctions/blob/c84842779eba9a9088a2e5a9beae4079af7e6b7a/functions/progressBarStacked.fmfn
// BD Link : https://www.briandunning.com/cf/2799
// Written by: jonni@me.com
// V 1.2